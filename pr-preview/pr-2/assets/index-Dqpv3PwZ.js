var h=Object.defineProperty;var b=(n,e,s)=>e in n?h(n,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[e]=s;var t=(n,e,s)=>b(n,typeof e!="symbol"?e+"":e,s);import"./modulepreload-polyfill-B5Qt9EMX.js";class y{constructor(e,s){t(this,"subscribers",new Set);this.playersCount=e,this.currentPlayerIndex=s}subscribe(e){this.subscribers.add(e)}unsubscribe(e){this.subscribers.delete(e)}notify(e){this.subscribers.forEach(s=>s.update(e))}next(){this.notify(this.currentPlayerIndex%this.playersCount),this.currentPlayerIndex+=1}}class p{constructor(e=6){t(this,"currentPlayerIndex",0);t(this,"turnGenerator",new y(2,this.currentPlayerIndex));t(this,"subscribers",new Set);this.sidesCount=e,this.turnGenerator.subscribe(this)}subscribe(e){this.subscribers.add(e)}unsubscribe(e){this.subscribers.delete(e)}notify(e){this.subscribers.forEach(s=>s.update(e))}update(e){this.currentPlayerIndex=e}roll(){this.turnGenerator.next();const e={playerIndex:this.currentPlayerIndex,diceResult:this.getDiceResult()};this.notify(e)}getDiceResult(){const e=new Uint8Array(1),s=window.crypto.getRandomValues(e);return Math.floor(s[0]/256*this.sidesCount)+1}}class f{constructor(){t(this,"subscribers",new Set);t(this,"players",[]);t(this,"winner",null);t(this,"rolls",[]);t(this,"diceGenerator",new p)}addPlayer(e){this.players.includes(e)||this.players.push(e),this.diceGenerator.subscribe(e)}start(){this.players.forEach(e=>e.subscribe(this))}makeMove(){this.winner||this.diceGenerator.roll()}subscribe(e){this.subscribers.add(e)}unsubscribe(e){this.subscribers.delete(e)}notify(e){this.subscribers.forEach(s=>s.update(e))}update(e){const{playerIndex:s,diceResult:r,isWinner:u}=e;this.rolls.push(r),u&&(this.winner=this.players.at(s)??null);const i={winner:this.winner,rolls:this.rolls,players:this.players};this.notify(i)}}class o{constructor(e){t(this,"diceResults",[]);t(this,"isWinner",!1);t(this,"subscribers",new Set);this.playerIndex=e}subscribe(e){this.subscribers.add(e)}unsubscribe(e){this.subscribers.delete(e)}notify(e){this.subscribers.forEach(s=>s.update(e))}update(e){const{playerIndex:s,diceResult:r}=e;if(this.playerIndex!==s)return;this.diceResults.push(r);const u=this.diceResults.reduce((l,d)=>l+d,0);this.isWinner=u>=21;const i=this.makeResultInfo(r);this.notify(i)}getDiceResults(){return this.diceResults}makeResultInfo(e){return{playerIndex:this.playerIndex,diceResult:e,isWinner:this.isWinner}}}class m{constructor(){t(this,"diceCapContainer",document.querySelector(".dice-cap-container"));t(this,"generalSumContainer",document.querySelector(".general-sum"));t(this,"firstContainer",document.querySelector(".container1"));t(this,"firstSumContainer",document.querySelector(".sum1"));t(this,"secondContainer",document.querySelector(".container2"));t(this,"secondSumContainer",document.querySelector(".sum2"))}update(e){const{winner:s,rolls:r,players:u}=e;s&&this.colorWinnerField(s.playerIndex),this.updateField(r,this.diceCapContainer),u.forEach(i=>this.updateField(i.getDiceResults(),i.playerIndex===0?this.firstContainer:this.secondContainer))}updateField(e,s){if(s){s.innerText=e.join(" ");const r=e.reduce((u,i)=>u+i,0);s===this.diceCapContainer?this.updateSum(r,this.generalSumContainer):s===this.firstContainer?this.updateSum(r,this.firstSumContainer):this.updateSum(r,this.secondSumContainer)}}updateSum(e,s){s&&(s.innerText=String(e))}colorWinnerField(e){const s=e===0?this.firstContainer:this.secondContainer,r=s==null?void 0:s.parentElement;r&&(r.style.backgroundColor="rgb(255,204,204)")}}const a=new f,C=new o(0),S=new o(1),x=new m;a.addPlayer(C);a.addPlayer(S);a.start();a.subscribe(x);function I(){a.makeMove()}const c=document.querySelector(".roll-button");c==null||c.addEventListener("click",I);
